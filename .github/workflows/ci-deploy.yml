name: Python CI + Multi-Branch Deploy (zafer)

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  ci:
    name: CI — lint, test, build artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint (basic check)
        run: python -m py_compile src/*.py

      - name: Run tests
        run: pytest -q

      - name: Build artifact (simulate build)
        run: |
          mkdir -p build
          echo "Project: zafer multi-branch assigement" > build/output.txt
          echo "Commit: $GITHUB_SHA" >> build/output.txt
          echo "Built by: $GITHUB_ACTOR" >> build/output.txt

      - name: Archive build
        run: tar -czf artifact.tar.gz build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: artifact.tar.gz

  deploy_qa:
    name: Deploy → QA (dev)
    runs-on: ubuntu-latest
    needs: ci
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifact

      - name: Extract artifact
        run: |
          mkdir -p deployed_to_qa
          tar -xzf ./artifact/artifact.tar.gz -C deployed_to_qa

      - name: Simulate QA deploy
        run: |
          echo "=== QA Deploy ==="
          ls -la deployed_to_qa
          cat deployed_to_qa/build/output.txt

  deploy_prod:
    name: Deploy → Production (main)
    runs-on: ubuntu-latest
    needs: ci
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifact

      - name: Extract artifact
        run: |
          mkdir -p deployed_to_prod
          tar -xzf ./artifact/artifact.tar.gz -C deployed_to_prod

      - name: Simulate Production deploy
        run: |
          echo "=== Production Deploy ==="
          ls -la deployed_to_prod
          cat deployed_to_prod/build/output.txt
